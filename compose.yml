# ###
#

services:

  # ###
  redis-server:
    container_name: redis-server
    image: 'redis/redis-stack-server'
    volumes:
      - redis-data:/data
    ports: # enable to visualize data in redis insight
      - '${REDIS_INSIGHT_PORT}:6379'

  # ###
  mongodb-server: # mongodb with replica for transactions support
    container_name: mongodb-server
    build:
      context: ./
      dockerfile: dockerfile-mongodb-replica
    volumes:
      - mongodb-data:/data/db # default path
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: prisma
      MONGO_REPLICA_HOST: mongodb-server
      MONGO_REPLICA_PORT: 27017
    ports: # enable to visualize data in mongodb compass
      - '${MONGODB_COMPASS_PORT}:27017'
      # mongodb compass url is mongodb://localhost:27017/?directConnection=true

  # ###
  postgresql-server:
    container_name: postgresql-server
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_DB=tests
      - POSTGRES_USER=prisma
      - POSTGRES_PASSWORD=prisma
    ports:
      - '${POSTGRES_PORT}:5432'

  # ###
  postgresql-pg-admin-gui:
    container_name: postgresql-pg-admin-gui
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - '${POSTGRES_PG_ADMIN_PORT}:80'

  # ###
  cdn:
    container_name: cdn
    build:
      context: ./
  #    dockerfile: dockerfile-cdn
  #    args:
  #      BUILD_BASE_PATH: cdn
  #  ports:
  #    - '${CDN_PORT}:80'

  # ###
  database-seed:
    container_name: database-seed
    build:
      context: ./
      dockerfile: dockerfile-database-seed
      args:
        BUILD_BASE_PATH: database
    env_file:
      - ./.env
    depends_on:
      - mongodb-server
      - postgresql-server
      - cdn # to seed products image summary

  # ###
  orders-service:
    container_name: orders-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/orders
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server

  # ###
  order-history-service:
    container_name: order-history-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/order-history
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server

  # ###
  products-service:
    container_name: products-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/products
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server

  # ###
  payments-service:
    container_name: payments-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/payments
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server
      - orders-service

  # ###
  digital-identity-service:
    container_name: digital-identity-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/digital-identity
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server
      - payments-service

  # ###
  profile-service:
    container_name: profile-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/profile
    env_file:
      - ./.env
    depends_on:
      - redis-server
      - mongodb-server
      - payments-service

  # ###
  api-gateway:
    container_name: api-gateway
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/api-gateway
    ports:
      - '${API_GATEWAY_PORT}:${API_GATEWAY_PORT}'
    env_file:
      - ./.env
    depends_on:
      - orders-service
      - order-history-service
      - products-service
      - digital-identity-service

  # ###
  client:
    container_name: client
    build:
      context: ./
      dockerfile: dockerfile-client
      args:
        BUILD_BASE_PATH: client/nextjs
        API_GATEWAY_URI: ${API_GATEWAY_URI}
        NEXT_PUBLIC_API_GATEWAY_URI: ${NEXT_PUBLIC_API_GATEWAY_URI}
        NEXT_PUBLIC_LANDING_PAGE_CODE: ${NEXT_PUBLIC_LANDING_PAGE_CODE}
    ports:
      - '${FRONTEND_CLIENT_PORT}:${FRONTEND_CLIENT_PORT}'
    env_file:
      - ./.env
    stdin_open: true # -i input flag
    tty: true # -t terminal flag
    depends_on:
      - api-gateway
      - cdn

# ###
#
volumes:
  redis-data:
  postgresql-data:
  mongodb-data:

